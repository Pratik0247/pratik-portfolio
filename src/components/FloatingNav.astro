---
import ResumeMenu from "./ResumeMenu.astro";

const sections = [
  {
    id: "experience",
    label: "Experience",
    link: "#experience",
    type: "section",
  },
  { id: "projects", label: "Projects", link: "#projects", type: "section" },
  { id: "contact", label: "Contact", link: "#contact", type: "section" },
];
---

<!-- Desktop / Tablet: Vertical Pill Nav -->
<div
  id="floating-nav"
  class="hidden md:inline-flex fixed right-4 top-1/3 flex-col gap-3 z-50
         opacity-0 pointer-events-none"
>
  <!-- Resume Menu -->
  <div data-type="resume">
    <ResumeMenu label="Download Resume" size="sm" id="floating" />
  </div>

  <!-- Other sections -->
  {
    sections.map((s) => (
      <a
        id={`nav-${s.id}`}
        data-type={s.type}
        href={s.link}
        class="px-5 py-2 rounded-full text-sm font-medium text-center 
          backdrop-blur-md liquid-glass-btn
          bg-[var(--charcoal)]/70 border border-[var(--paynes-gray)]/40 text-[var(--light-blue)] hover:text-[var(--ghost-white)] hover:border-[var(--light-blue)] hover:shadow-[0_0_10px_var(--light-blue)]"
      >
        {s.label}
      </a>
    ))
  }
</div>

<!-- Mobile: Bottom Floating Pills -->
<div
  id="bottom-nav"
  class="md:hidden fixed bottom-4 left-1/2 -translate-x-1/2 flex gap-2 z-50
         opacity-0 pointer-events-none transition-opacity duration-700"
>
  <!-- Resume Menu for Mobile -->
  <div data-type="resume">
    <ResumeMenu label="Resume" size="sm" id="mobile" />
  </div>

  <!-- Other sections for Mobile -->
  {
    sections.map((s) => (
      <a
        id={`nav-mobile-${s.id}`}
        data-type={s.type}
        href={s.link}
        class="inline-flex items-center px-3 py-2 rounded-full text-xs font-medium text-center
              backdrop-blur-md liquid-glass-btn
              bg-[var(--charcoal)]/70 border border-[var(--paynes-gray)]/40 text-[var(--light-blue)] hover:text-[var(--ghost-white)] hover:border-[var(--light-blue)] hover:shadow-[0_0_10px_var(--light-blue)]"
      >
        {s.label}
      </a>
    ))
  }
</div>

<!-- Scroll-to-top button -->
<a
  id="scrollTopBtnDesktop"
  href="#hero"
  class="hidden md:flex fixed bottom-6 right-6 w-12 h-12 rounded-full
         items-center justify-center z-50
         border border-white/20 bg-white/10 backdrop-blur-md
         text-[var(--light-blue)]
         hover:text-[var(--ghost-white)] hover:border-[var(--light-blue)]
         hover:shadow-[0_0_20px_var(--light-blue)]
         opacity-0 pointer-events-none"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke="currentColor"
    stroke-width="2"
    class="w-6 h-6"
  >
    <path stroke-linecap="round" stroke-linejoin="round" d="M5 15l7-7 7 7"
    ></path>
  </svg>
</a>

<script>
  const navDesktop = document.getElementById("floating-nav");
  const navMobile = document.getElementById("bottom-nav");

  // Show navs only after hero
  function toggleVisibility(el, show) {
    if (!el) return;
    el.classList.remove("slide-in-right", "slide-out-right");
    if (show) {
      el.classList.remove("opacity-0", "pointer-events-none");
      el.classList.add("slide-in-right");
    } else {
      el.classList.add("slide-out-right");
      setTimeout(() => {
        el.classList.add("opacity-0", "pointer-events-none");
      }, 400); // match slide-out duration
    }
  }

  // Show navs only after hero
  window.addEventListener("scroll", () => {
    if (window.scrollY > window.innerHeight * 0.6) {
      // Desktop nav
      if (!navDesktop.classList.contains("slide-in-right")) {
        navDesktop.classList.remove(
          "slide-out-right",
          "opacity-0",
          "pointer-events-none",
        );
        navDesktop.classList.add("slide-in-right");
      }

      // Mobile nav
      if (!navMobile.classList.contains("slide-up")) {
        navMobile.classList.remove(
          "slide-down",
          "opacity-0",
          "pointer-events-none",
        );
        navMobile.classList.add("slide-up");
      }
    } else {
      // Desktop nav
      if (navDesktop.classList.contains("slide-in-right")) {
        navDesktop.classList.remove("slide-in-right");
        navDesktop.classList.add("slide-out-right");
        setTimeout(() => {
          navDesktop.classList.add("opacity-0", "pointer-events-none");
        }, 600);
      }

      // Mobile nav
      if (navMobile.classList.contains("slide-up")) {
        navMobile.classList.remove("slide-up");
        navMobile.classList.add("slide-down");
        setTimeout(() => {
          navMobile.classList.add("opacity-0", "pointer-events-none");
        }, 600);
      }
    }
  });

  // Scrollspy for section pills
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        const navLink = document.getElementById(`nav-${entry.target.id}`);
        const navMobileLink = document.getElementById(
          `nav-mobile-${entry.target.id}`,
        );

        [navLink, navMobileLink].forEach((link) => {
          if (link && link.dataset.type !== "resume") {
            if (entry.isIntersecting) {
              link.classList.add(
                "bg-[var(--charcoal)]/90",
                "border-[var(--light-blue)]",
                "text-[var(--ghost-white)]",
                "shadow-[0_0_10px_var(--light-blue)]",
              );
              if (link.id.startsWith("nav-")) {
                link.classList.add("translate-x-[-4px]");
              } else {
                link.classList.add("translate-y-[-4px]");
              }
            } else {
              link.classList.remove(
                "bg-[var(--charcoal)]/90",
                "border-[var(--light-blue)]",
                "text-[var(--ghost-white)]",
                "shadow-[0_0_10px_var(--light-blue)]",
                "translate-x-[-4px]",
                "translate-y-[-4px]",
              );
            }
          }
        });
      });
    },
    { threshold: 0.4 },
  );

  ["experience", "projects", "contact"].forEach((id) => {
    const section = document.getElementById(id);
    if (section) observer.observe(section);
  });
</script>

<script>
  const scrollTopBtnDesktop = document.getElementById("scrollTopBtnDesktop");

  window.addEventListener("scroll", () => {
    if (window.scrollY > window.innerHeight * 0.9) {
      // Show
      if (!scrollTopBtnDesktop.classList.contains("slide-in-right")) {
        scrollTopBtnDesktop.classList.remove("slide-out-right", "opacity-0", "pointer-events-none");
        scrollTopBtnDesktop.classList.add("slide-in-right", "opacity-100");
      }
    } else {
      // Hide with animation first
      if (scrollTopBtnDesktop.classList.contains("slide-in-right")) {
        scrollTopBtnDesktop.classList.remove("slide-in-right", "opacity-100");
        scrollTopBtnDesktop.classList.add("slide-out-right");

        // After animation ends, make it non-interactive
        setTimeout(() => {
          scrollTopBtnDesktop.classList.add("opacity-0", "pointer-events-none");
        }, 600); // match animation duration
      }
    }
  });
</script>

